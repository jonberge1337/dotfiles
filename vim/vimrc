set nocompatible
set number
set relativenumber
set ttimeoutlen=50 "Tiempo escape
set timeoutlen=1000 "Tiempo siguiente comando
set showcmd "Muestra comando incompleto
set wildmenu "Autocompletado menu
set mouse=a "Soporte mouse
set cursorline "Resalta la linea que estoy
set backspace=indent,eol,start "Para poder borrar con backspace
set clipboard=unnamedplus "Cipboard principal para todo

filetype indent plugin on
syntax on

if !isdirectory($HOME."/.vim/undodir")
    call mkdir($HOME."/.vim/undodir", "p")
endif

set undofile
set undodir=~/.vim/undodir

set noswapfile "desactiva los archivos Swap
set nobackup   "no se crean respaldos permanentes cuando se guarda un archivo
set nowritebackup "no se crean respaldos temporales al guardar archivos
set nowrap "Para que la linea se quede entera
set nofoldenable "Al iniciar todo desplegado

set ignorecase "busquedas no distinguen mayusculas y minusculas
set incsearch   "Muestra la concordancia de una busqueda mientras escribes.
set hlsearch    "Resalta las busquedas

colorscheme gruvbox

" Atajos utiles, cuando te equivocas escribiendo alguno de estos comandos <<<
"ejemplo :w para guardar, si escribes rapido posiblemente escribas :W
cnoreabbrev W w
cnoreabbrev W! w!
cnoreabbrev Q! q!
cnoreabbrev Qall! qall!
cnoreabbrev Wq wq
cnoreabbrev Wa wa
cnoreabbrev wQ wq
cnoreabbrev WQ wq
cnoreabbrev Q q
cnoreabbrev Qall qall
" >>>

let mapleader = ","
let &t_SI = "\<Esc>[6 q"
let &t_EI = "\<Esc>[2 q"

tnoremap <Esc> <C-\><C-n>
nnoremap <F11> :NERDTreeToggle<CR>
nnoremap <F12> :TagbarToggle<CR>
nnoremap <silent> <C-l> :bn!<CR>
nnoremap <silent> <C-h> :bp!<CR>
nnoremap ññ :b#<CR>
nnoremap <leader>q :bd<CR>
nnoremap <leader>Q :bd!<CR>

" format file <<<
function Formatear()
    if &formatprg != ""
        let l:pos = getpos(".")
        exe 'norm! gggqG'
        call setpos(".", pos)
    else
        echo 'No tienes definido formatprg'
    endif
endfunction

nnoremap gq% :call Formatear()<CR>
">>>

" Sesiones <<<

if !isdirectory($HOME."/.vim/sessions")
    call mkdir($HOME."/.vim/sessions", "p")
endif

au VimLeave * call VimLeave()
au VimEnter * call VimEnter()
let g:PathToSessions = $HOME . "/.vim/sessions/"

function! VimEnter()
    if argc() == 0
        let LoadLastSession = confirm("Restore last session?", "&Yes\n&No")
        if LoadLastSession == 1
            exe "source " . g:PathToSessions . "LastSession.vim"
        endif
    endif
endfunction

function! VimLeave(...)
    exe "NERDTreeClose"
    exe "Obsession " . g:PathToSessions . "LastSession.vim"
    if a:0 != ""
        execute "Obsession " . g:PathToSessions . a:0 . ".vim"
    endif
endfunction

" A command for setting the session name
command! -nargs=1 SaveSession :call VimLeave(<args>)
">>>

if has("gui_running")
    set guicursor+=a:blinkon0 "cursor sin parpadeo
    set guioptions= "no menu interfaces
    if has('unix')
        set guifont=DejaVuSansMono\ Nerd\ Font\ 13
    endif
endif

" vim: foldmethod=marker foldmarker=<<<,>>>
