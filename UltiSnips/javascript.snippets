# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt


snippet function "function (named)"
function ${1:function_name} (${2:argument}) {
	${VISUAL}$0
}
endsnippet

snippet while "while (condition) { ... }"
while (${1:/* condition */}) {
	${0:${VISUAL}}
}
endsnippet

snippet do "do { ... } while (condition)"
do {
	${0:${VISUAL}}
} while (${1:/* condition */});
endsnippet

snippet for "for (...) {...}"
for (var ${1:i} = 0, ${2:len} = ${3:Things.length}; $1 < $2; $1++) {
    ${0:${VISUAL}}
}
endsnippet

snippet fore
for (var ${1:prop} in ${2:object}) {
    ${0:$2[$1]}
}
endsnippet

snippet if "if (condition) { ... }"
if (${1:true}) {
    ${0:${VISUAL}}
}
endsnippet

snippet ife "if (condition) { ... } else { ... }"
if (${1:true}) {
    ${0:${VISUAL}}
} else {
    ${2}
}
endsnippet

snippet ter "condition ? true : false"
${1:/* condition */} ? ${2:/* if true */} : ${0:/* if false */}
endsnippet

snippet switch
switch (${1:expression}) {
    case '${3:case}':
        ${4}
        break;
        ${0}
    default:
        ${2}
}
endsnippet
